schema: "https://schema.org/TechnicalDocument"
id: "agent-comm-schema-001"
version: "1.1.0"
last_updated: "2024-12-29T00:00:00Z"
status: "Active"
priority: "P0"
owner: "Documentation Team"

message_schema:
  type: object
  required:
    - id
    - timestamp
    - sender
    - type
    - content
    - status
  properties:
    id:
      type: string
      description: "Unique identifier for the message"
      format: uuid
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    timestamp:
      type: string
      description: "ISO-8601 timestamp of message creation"
      format: date-time
      pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"
    sender:
      type: string
      description: "Identifier of the sending agent"
      pattern: "^[a-zA-Z0-9_-]+$"
    type:
      type: string
      description: "Type of message"
      enum:
        - test_request
        - test_result
        - status_update
        - context_update
        - workflow_request
        - validation_request
        - documentation_update
    content:
      type: object
      description: "Message-specific content"
      additionalProperties: true
    status:
      type: string
      description: "Current status of the message"
      enum:
        - pending
        - processed
        - failed

message_types:
  test_request:
    type: object
    required:
      - test_type
      - test_file
      - parameters
    properties:
      test_type:
        type: string
        description: "Type of test to execute"
        enum:
          - unit
          - integration
          - e2e
          - performance
      test_file:
        type: string
        description: "Path to test file"
        pattern: "^[a-zA-Z0-9/._-]+$"
      parameters:
        type: object
        description: "Test parameters"
        properties:
          environment:
            type: string
            description: "Test environment"
            enum:
              - development
              - staging
              - production
          verbose:
            type: boolean
            description: "Verbose output flag"

  test_result:
    type: object
    required:
      - test_id
      - status
      - logs
      - artifacts
    properties:
      test_id:
        type: string
        description: "ID of the test request"
        format: uuid
      status:
        type: string
        description: "Test execution status"
        enum:
          - passed
          - failed
          - error
      logs:
        type: array
        description: "Test execution logs"
        items:
          type: string
      artifacts:
        type: object
        description: "Test artifacts"
        properties:
          path:
            type: string
            description: "Path to artifact"
            pattern: "^[a-zA-Z0-9/._-]+$"
          type:
            type: string
            description: "Type of artifact"
            enum:
              - log
              - report
              - coverage
              - screenshot

  status_update:
    type: object
    required:
      - agent_id
      - state
      - progress
    properties:
      agent_id:
        type: string
        description: "Identifier of the agent"
        pattern: "^[a-zA-Z0-9_-]+$"
      state:
        type: string
        description: "Current state of the agent"
        enum:
          - idle
          - busy
          - error
          - offline
      progress:
        type: number
        description: "Progress percentage"
        minimum: 0
        maximum: 100

  context_update:
    type: object
    required:
      - context_id
      - type
      - data
    properties:
      context_id:
        type: string
        description: "Identifier of the context"
        format: uuid
      type:
        type: string
        description: "Type of context update"
        enum:
          - add
          - update
          - remove
      data:
        type: object
        description: "Context data"
        additionalProperties: true

  workflow_request:
    type: object
    required:
      - workflow_name
      - steps
      - parameters
    properties:
      workflow_name:
        type: string
        description: "Name of the workflow to execute"
        pattern: "^[a-zA-Z0-9_-]+$"
      steps:
        type: array
        description: "Workflow steps to execute"
        items:
          type: object
          required:
            - name
            - action
          properties:
            name:
              type: string
              description: "Step name"
            action:
              type: string
              description: "Action to perform"
            parameters:
              type: object
              description: "Step parameters"
              additionalProperties: true
            timeout_seconds:
              type: integer
              description: "Step timeout in seconds"
              minimum: 1
              maximum: 3600
            retry_count:
              type: integer
              description: "Number of retries"
              minimum: 0
              maximum: 5
            depends_on:
              type: array
              description: "Step dependencies"
              items:
                type: string
      parameters:
        type: object
        description: "Workflow parameters"
        additionalProperties: true
      parallel_execution:
        type: boolean
        description: "Enable parallel step execution"
        default: false
      failure_strategy:
        type: string
        description: "Strategy when step fails"
        enum:
          - abort
          - continue
          - retry
        default: "abort"

  validation_request:
    type: object
    required:
      - validation_type
      - target_files
    properties:
      validation_type:
        type: string
        description: "Type of validation to perform"
        enum:
          - schema
          - documentation
          - messages
          - project
      target_files:
        type: array
        description: "Files to validate"
        items:
          type: string
          pattern: "^[a-zA-Z0-9/._*-]+$"
        minItems: 1
      validation_level:
        type: string
        description: "Validation strictness level"
        enum:
          - basic
          - enhanced
          - strict
        default: "enhanced"
      auto_fix:
        type: boolean
        description: "Automatically fix issues"
        default: false
      generate_report:
        type: boolean
        description: "Generate validation report"
        default: true

  documentation_update:
    type: object
    required:
      - update_type
      - target_documents
    properties:
      update_type:
        type: string
        description: "Type of documentation update"
        enum:
          - create
          - update
          - delete
          - sync
      target_documents:
        type: array
        description: "Documents to update"
        items:
          type: string
          pattern: "^[a-zA-Z0-9/._-]+$"
        minItems: 1
      template_name:
        type: string
        description: "Template to use for creation/update"
        pattern: "^[a-zA-Z0-9_-]+$"
      metadata_updates:
        type: object
        description: "Metadata updates to apply"
        additionalProperties: true
      auto_generate:
        type: boolean
        description: "Auto-generate content"
        default: false

file_schema:
  type: object
  required:
    - messages
    - last_updated
    - version
  properties:
    messages:
      type: array
      description: "Array of messages"
      items:
        $ref: "#/message_schema"
    last_updated:
      type: string
      description: "Last update timestamp"
      format: date-time
      pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"
    version:
      type: string
      description: "Schema version"
      pattern: ^\d+\.\d+\.\d+$ 